// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "cockroachdb"
    url      = env("DATABASE_URI")
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

model User {
    id          String      @id @default(cuid())
    firstName   String?
    lastName    String?
    username    String      @unique
    email       String?     @unique
    dateOfBirth DateTime?
    weight      Int?
    height      Int?
    password    String
    Ingestion   Ingestion[]
    Journal     Journal[]
}

model Ingestion {
    id                    String   @id @default(cuid())
    /// The date when the ingestion was performed.
    date                  DateTime
    /// Dosage in miligrams
    dosage                Float
    purity                Float?
    /// The route of administration of the substance.
    routeOfAdministration String
    /// Ingested substance
    substanceName         String

    // Aditional information
    purpose String?
    set     String?
    setting String?

    ingesterId String

    Substance Substance @relation(fields: [substanceName], references: [name])
    Ingester  User      @relation(fields: [ingesterId], references: [id])
    // Journal   Journal?  @relation(fields: [journalId], references: [id])
    // journalId String?
    Journal   Journal[]
}

model Journal {
    id      String @id @default(cuid())
    ownerId String
    name    String

    Ingestions Ingestion[]
    Owner      User        @relation(fields: [ownerId], references: [id])
}

model RouteOfAdministration {
    id              String  @id @default(cuid())
    type            String
    bioavailability Float?
    isRecommended   Boolean @default(false)

    // Dosages specific for such route of administration
    theresholdDosage Float
    lightDosage      Float
    commonDosage     Float
    strongDosage     Float
    heavyDosage      Float
    toxicDosage      Float?
    lethalDosage     Float?

    // Stage Durations
    onset        Int
    comeup       Int
    peak         Int
    offset       Int
    aftereffects Int

    substanceName String
    Substance     Substance @relation(fields: [substanceName], references: [name])
}

model Effect {
    id String @id @default(cuid())

    name     String  @unique
    category String
    type     String?

    description       String
    page              String?
    OccuranceOfEffect OccuranceOfEffect[]
}

// TODO: Effect Occurance
// This should be a junction table between Effects and Ingestions and Substances where we can define a occurance of Effect under specific conditions, there is altrnative way for this - we can create EffectCondition table and connect it to Effect and Ingestion/Substance
model OccuranceOfEffect {
    id String @id @default(cuid())

    effect                String
    substance             String?
    dosage                String[]
    routeOfAdministration String[]
    phase                 String[]
    psychoactiveGroup     String[]
    intensivity           String?
    description           String?

    Substance Substance? @relation(fields: [substance], references: [name])
    Effect    Effect     @relation(fields: [effect], references: [name])
}

model Substance {
    id String @id @default(cuid())

    // General
    name String @unique

    // Chemical nomenclature
    commonNomenclature       String[]
    substitutiveNomenclature String
    systematicNomenclature   String

    // Substance Class
    chemicalClass     String
    psychoactiveClass String

    // Routes of administration
    routesOfAdministraton RouteOfAdministration[]

    // Ingestions of substance
    Ingestion         Ingestion[]
    OccuranceOfEffect OccuranceOfEffect[]
}
